package com.genomu.starttravel.util;

import com.google.firebase.firestore.Query;

public class CodeMapping {
    public static Query parseCodes(String place,HanWen hanWen){
        switch (place){
            case "東北亞":
                return hanWen.seekFromTravels("travel_code",401,41,342,343);
            case "中國北部":
                return hanWen.seekFromTravels("travel_code",426,427,432,435,428);
            case "中國南部":
                return hanWen.seekFromTravels("travel_code",430,431,433,436,439,440,441,442);
            case "東南亞":
                return hanWen.seekFromTravels("travel_code",405,406,417,416,411,410,391,392);
            case "南亞":
                return hanWen.seekFromTravels("travel_code",394,399,99);
            case "西亞":
                return hanWen.seekFromTravels("travel_code",368,412);
            case "北美":
                return hanWen.seekFromTravels("travel_code",409,43);
            case "西歐":
                return hanWen.seekFromTravels("travel_code",414,413);
            case "中歐":
                return hanWen.seekFromTravels("travel_code",101,393,394);
            case "北歐":
                return hanWen.seekFromTravels("travel_code",40,396,395);
            case "東歐":
                return hanWen.seekFromTravels("travel_code",404,44);
            case "南歐":
                return hanWen.seekFromTravels("travel_code",397,398);
            case "澳洲":
                return hanWen.seekFromTravels("travel_code",408,407);
            case "非洲":
                return hanWen.seekFromTravels("travel_code",100,415);
            case "日本":
                return hanWen.seekFromTravels("travel_code",401,41);
            case "韓國":
                return hanWen.seekFromTravels("travel_code",342,343);
            case "泰國":
                return hanWen.seekFromTravels("travel_code",405,406);
            case "汶萊":
                return hanWen.seekFromTravels("travel_code",417);
            case "馬來西亞":
                return hanWen.seekFromTravels("travel_code",416);
            case "菲律賓":
                return hanWen.seekFromTravels("travel_code",411,410);
            case "柬埔寨．吳哥窟．金邊":
                return hanWen.seekFromTravels("travel_code",391);
            case "緬甸．寮國":
                return hanWen.seekFromTravels("travel_code",392);
            case "斯里蘭卡":
                return hanWen.seekFromTravels("travel_code",384);
            case "尼泊爾．不丹":
                return hanWen.seekFromTravels("travel_code",399);
            case "土耳其":
                return hanWen.seekFromTravels("travel_code",368);
            case "伊朗．以色列．約旦":
                return hanWen.seekFromTravels("travel_code",412);
            case "馬爾地夫":
                return hanWen.seekFromTravels("travel_code",99);
            case "阿拉斯加":
                return hanWen.seekFromTravels("travel_code",409);
            case "美國":
                return hanWen.seekFromTravels("travel_code",43);
            case "雪梨":
                return hanWen.seekFromTravels("travel_code",408);
            case "墨爾本":
                return hanWen.seekFromTravels("travel_code",407);
            case "瑞士":
                return hanWen.seekFromTravels("travel_code",394);
            case "奧地利":
                return hanWen.seekFromTravels("travel_code",393);
            case "法國":
                return hanWen.seekFromTravels("travel_code",414);
            case "比利時．荷蘭．盧森堡":
                return hanWen.seekFromTravels("travel_code",413);
            case "希臘":
                return hanWen.seekFromTravels("travel_code",397);
            case "葡萄牙．西班牙":
                return hanWen.seekFromTravels("travel_code",397);
            case "丹麥．挪威．瑞典．芬蘭":
                return hanWen.seekFromTravels("travel_code",40);
            case "冰島":
                return hanWen.seekFromTravels("travel_code",396);
            case "捷克．波蘭．匈牙利":
                return hanWen.seekFromTravels("travel_code",101);
            case "克羅埃西亞":
                return hanWen.seekFromTravels("travel_code",404);
            case "俄羅斯":
                return hanWen.seekFromTravels("travel_code",44);
            case "波羅的海周邊":
                return hanWen.seekFromTravels("travel_code",395);
            case "埃及":
                return hanWen.seekFromTravels("travel_code",395);
            case "馬達加斯加．模里西斯":
                return hanWen.seekFromTravels("travel_code",100);
            case "四國．中國．高松．廣島．岡山":
                return hanWen.seekFromTravels("travel_code",401);
            case "九州．福岡．宮崎．鹿兒島．佐賀":
                return hanWen.seekFromTravels("travel_code",41);
            case "釜山．慶州．大邱":
                return hanWen.seekFromTravels("travel_code",342);
            case "濟州島":
                return hanWen.seekFromTravels("travel_code",343);
            case "華欣":
                return hanWen.seekFromTravels("travel_code",405);
            case "蘇梅島":
                return hanWen.seekFromTravels("travel_code",406);
            case "宿霧．薄荷島":
                return hanWen.seekFromTravels("travel_code",411);
            case "巴拉望":
                return hanWen.seekFromTravels("travel_code",410);
            case "北京．天津．承德":
                return hanWen.seekFromTravels("travel_code",426);
            case "山西太原":
                return hanWen.seekFromTravels("travel_code",427);
            case "江南．上海．杭州．蘇州":
                return hanWen.seekFromTravels("travel_code",430);
            case "黃山．千島湖":
                return hanWen.seekFromTravels("travel_code",431);
            case "山東．青島．濟南．煙台．泰山":
                return hanWen.seekFromTravels("travel_code",432);
            case "長沙．武漢．張家界．長江三峽":
                return hanWen.seekFromTravels("travel_code",433);
            case "河南．開封．洛陽．少林寺．龍門石窟":
                return hanWen.seekFromTravels("travel_code",435);
            case "廈門．小三通":
                return hanWen.seekFromTravels("travel_code",436);
            case "港澳珠圳":
                return hanWen.seekFromTravels("travel_code",439);
            case "四川．重慶．成都．九寨溝":
                return hanWen.seekFromTravels("travel_code",440);
            case "雲南．昆明．大理．麗江":
                return hanWen.seekFromTravels("travel_code",441);
            case "貴州．貴陽．黃果樹":
                return hanWen.seekFromTravels("travel_code",442);
            case "大連．瀋陽．哈爾濱．北韓":
                return hanWen.seekFromTravels("travel_code",428);
            default:
                return hanWen.seekFromTravels("travel_code",999);
        }
    }
}
